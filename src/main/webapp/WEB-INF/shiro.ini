[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /broker.jsf
authc.successUrl = /broker.jsf
roles.unauthorizedUrl = /errorpages/unauthorized.jsf

ssl.enabled = false

# Use default password matcher (SHA-256, 500000 hash iterations)
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
cookie = org.apache.shiro.web.servlet.SimpleCookie 
cookie.name = shiro.session.id
sessionManager.sessionIdCookie = $cookie

# configure properties (like session timeout) here if desired
sessionManager.sessionIdCookieEnabled = true

builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager
securityManager.rememberMeManager.cipherKey = kPH+bIxk5D2deZiIxcaaaA==


# Use the configured native session manager:
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.globalSessionTimeout = 3600000

#myfilter = com.pixelandtag.cmp.security.CMPFilter
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = java:jboss/paymentBrokerDS
ds.resourceRef = true

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = select pwdhash from users where username = ?
jdbcRealm.userRolesQuery = select rl.name from user_role r left join users u on u.id = r.user_id left join role rl on rl.id=r.role_id where u.username = ?
jdbcRealm.dataSource = $ds

securityManager.realms = $jdbcRealm


[urls]
/javax.faces.resource/** = anon
/broker.jsf = anon
/rest/** = anon
/errorpages/** = anon
/logout = logout
/admin/** = authc, roles[superadmin]
/** = authc, roles[user]